import java.util.Random;
import java.util.concurrent.CountDownLatch;

public class esercizioCaselliVeicoli {
	
	public static void main(String[] args) {
		int N = 5;
		double T=0.05;
		int V = 10;
		
		System.out.println("---------------- SEMAFORI -----------------");
		
		CountDownLatch contatore = new CountDownLatch(V);
		Casello casello = new Casello(N,T);
		
		int [] chilometriPerVeicolo = { 100,20,40,20,10,20,50,50,60,90}; 
		
		for(int i = 0; i<V; i++) {
			int chilometri = chilometriPerVeicolo[i]; //new Random().nextInt(51)+50;
			Veicolo veicolo = new Veicolo(casello, chilometri, contatore);
			veicolo.start();
		}
		
		System.out.println();
		System.out.println("---------------- BARRIERA MONOUSO O COUNTDOWNLATCH -----------------");
		
		try {
            contatore.await();  // Attendi che tutti i veicoli abbiano completato
            System.out.println("Incasso totale: " + casello.getIncasso() + "â‚¬");
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            System.out.println("Interruzione del processo principale.");
        }
		
		System.out.println();
		System.out.println("---------------- LOCK -----------------");
		
		N = 5;
		T=0.05;
		V = 10;
		CaselloConILock casello2 = new CaselloConILock(N,T);
		
		for(int i = 0; i<V; i++) {
			int chilometri = chilometriPerVeicolo[i]; //new Random().nextInt(51)+50;
			VeicoloConILock veicolo = new VeicoloConILock(casello2, chilometri);
			veicolo.start();
		}
	}
	
}
